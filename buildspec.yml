version: 0.2

phases:
  install:
    commands:
      - echo "Installing dependencies..."
      - apk add --no-cache bash curl jq unzip docker
      - echo "Installing Terraform..."
      - rm -rf terraform # Remove any conflicting file or directory
      - curl -LO https://releases.hashicorp.com/terraform/1.5.5/terraform_1.5.5_linux_amd64.zip
      - unzip -o terraform_1.5.5_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform --version
  pre_build:
    commands:
      - echo "Initializing Terraform..."
      - terraform init
      - echo "Logging into Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPO_NAME=fiap-34cld-app-ecs
      - IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t $REPO_NAME:$IMAGE_TAG .
      - docker tag $REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG
      - echo "Running Terraform plan..."
      - terraform plan -out=tfplan
  post_build:
    commands:
      - echo "Pushing Docker image to Amazon ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG
      - echo "Applying Terraform changes..."
      - terraform apply -auto-approve tfplan
      - echo "Writing image definitions file..."
      - printf '[{"name":"%s","imageUri":"%s"}]' $REPO_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
